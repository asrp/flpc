names <- hashtable(2131)
F' [ pushf: names ] bind: names2 'F
mem_value <- hashtable(4000)

set_mem_hint <- fun[index hint]:
  hashtable.set(int_to_str(index) hint mem_value)
  memory_hint.set(hint index)

convert_names <- fun[]:
  end = functions.end()
  index = names.get + 5
  cond = not(index > end)
  repeat_if:
    drop1(`cond)
    names . set(memory.get(index) memory.get(index + 3))
    # If it is memory pointer
    if type_of(memory.get(index + 3)) == 2:
      set_mem_hint(memory.get(index + 3) memory.get(index))
    index = `index + 7
    cond = not(index > end)

names.get <- fun[name]:
  value = hashtable.get(name names2())
  if value == None():
    if is_str(name):
      print("Can't_find_global_name:_")
      printraw(name)
      printeol()
    error("lookup_error")
  return(value)

new.bind <- fun[value]:
  name = input.next_token()
  hashtable.set(name value names2())
  set_mem_hint(value name)

convert_names()
hashtable.set("bind:" hashtable.get("new.bind" names2()) names2())
F' push: bind:     names2 hashtable.get rebind: bind:
   push: names.get names2 hashtable.get rebind: names.get 'F
