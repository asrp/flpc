#memory 11152 1152
794 487 -1 -1 279 187 1 387 91 487 287 411 5 375 503 67 119 91 487 187 435 42 187 187 42 42 187 331 42 187 187 42 42 187 75 42 187 18 42 187 487 42 135 135 487 339 151 495 487 339 495 487 339 495 487 339 495 487 339 810 99 487 339 495 487 339 495 487 339 495 487 339 495 487 259 495 487 239 9 291 487 339 411 13 427 13 810 99 427 13 187 17 331 187 182 423 427 13 187 21 331 187 198 423 427 13 187 25 331 187 210 423 427 13 187 29 331 187 222 423 427 13 187 33 331 187 234 423 427 13 187 37 331 187 250 423 427 13 187 41 331 187 262 423 427 13 187 45 331 187 274 423 427 13 187 49 331 187 286 423 427 13 187 53 331 187 298 423 239 13 187 57 331 187 310 423 487 279 391 243 411 9 187 326 463 91 487 411 61 239 61 810 315 487 339 810 83 487 187 778 463 487 287 411 65 435 187 69 331 187 3 75 435 187 73 331 187 7 75 435 187 77 331 187 11 75 435 187 81 331 187 15 75 435 187 85 331 187 19 75 435 187 89 331 187 23 75 435 187 93 331 187 27 75 435 187 97 331 187 31 75 435 187 101 331 187 35 75 435 187 105 331 187 39 75 435 187 109 331 187 43 75 435 187 113 331 187 47 75 435 187 117 331 187 51 75 435 187 121 331 187 55 75 435 187 125 331 187 59 75 435 187 129 331 187 291 75 435 187 133 331 187 67 75 435 187 137 331 187 71 75 435 187 141 331 187 75 75 435 187 145 331 187 79 75 435 187 149 331 187 83 75 435 187 153 331 187 87 75 435 187 157 331 187 91 75 435 187 161 331 187 95 75 435 187 165 331 187 99 75 435 187 169 331 187 103 75 435 187 173 331 187 107 75 435 187 177 331 187 111 75 435 187 181 331 187 115 75 435 187 185 331 187 119 75 435 187 189 331 187 123 75 435 187 193 331 187 127 75 435 187 197 331 187 131 75 435 187 201 331 187 135 75 435 187 205 331 187 143 75 435 187 209 331 187 147 75 435 187 213 331 187 151 75 435 187 217 331 187 155 75 435 187 221 331 187 159 75 435 187 225 331 187 163 75 435 187 229 331 187 167 75 435 187 233 331 187 171 75 435 187 237 331 187 175 75 435 187 241 331 187 179 75 435 187 245 331 187 183 75 435 187 17 331 187 187 75 435 187 249 331 187 191 75 435 187 1 331 187 18 75 435 187 33 331 187 199 75 435 187 253 331 187 203 75 435 187 257 331 187 207 75 435 187 261 331 187 211 75 435 187 265 331 187 215 75 435 187 269 331 187 219 75 435 187 273 331 187 223 75 435 187 277 331 187 227 75 435 187 281 331 187 231 75 435 187 285 331 187 235 75 435 187 37 331 187 239 75 435 187 289 331 187 243 75 435 187 293 331 187 247 75 435 187 297 331 187 251 75 435 187 301 331 187 255 75 435 187 305 331 187 259 75 435 187 309 331 187 263 75 435 187 313 331 187 267 75 435 187 53 331 187 271 75 435 187 317 331 187 275 75 435 187 321 331 187 279 75 435 187 325 331 187 283 75 435 187 329 331 187 287 75 435 187 333 331 187 291 75 435 187 337 331 187 295 75 435 187 29 331 187 299 75 435 187 341 331 187 303 75 435 187 345 331 187 307 75 435 187 349 331 187 311 75 435 187 353 331 187 315 75 435 187 357 331 187 319 75 435 187 361 331 187 323 75 435 187 365 331 187 327 75 435 187 369 331 187 331 75 435 187 373 331 187 335 75 435 187 377 331 187 339 75 435 187 381 331 187 343 75 435 187 385 331 187 347 75 435 187 389 331 187 351 75 435 187 393 331 187 355 75 435 187 397 331 187 359 75 435 187 401 331 187 363 75 435 187 405 331 187 367 75 435 187 409 331 187 371 75 435 187 413 331 187 375 75 435 187 417 331 187 379 75 435 187 421 331 187 383 75 435 187 425 331 187 387 75 435 187 429 331 187 391 75 435 187 433 331 187 395 75 435 187 437 331 187 399 75 435 187 441 331 187 403 75 435 187 445 331 187 407 75 435 187 41 331 187 411 75 435 187 449 331 187 415 75 435 187 453 331 187 419 75 435 187 457 331 187 423 75 435 187 45 331 187 427 75 435 187 461 331 187 431 75 435 187 465 331 187 435 75 435 187 469 331 187 439 75 435 187 473 331 187 443 75 435 187 477 331 187 447 75 435 187 481 331 187 451 75 435 187 485 331 187 455 75 435 187 489 331 187 459 75 435 187 493 331 187 463 75 435 187 497 331 187 467 75 435 187 501 331 187 471 75 435 187 505 331 187 475 75 435 187 509 331 187 479 75 435 187 513 331 187 483 75 435 187 57 331 187 487 75 435 187 517 331 187 491 75 435 187 521 331 187 495 75 435 187 525 331 187 499 75 435 187 529 331 187 503 75 435 187 533 331 187 507 75 435 187 537 331 187 511 75 435 187 541 331 187 515 75 435 187 545 331 187 710 75 435 187 549 331 187 810 75 435 187 553 331 187 42 75 435 187 557 331 187 78 75 435 187 561 331 187 710 75 435 187 565 331 187 750 75 435 187 569 331 187 794 75 18 487
#positions 1152

#strings 143
lookup_error value pointer token push: attr: attr_call: pushi: pushf: check: assign: pick: bind: ''' ] name key 0 fd_next_line || file.close load_state if-else call_stack.len str_join _cheat_dict.new is_alpha newfunc2 newfunc3 printspace < s4127 return memory.set == return_if sub_str call_from_input not return_no_value mod mempos_append print_state current_input_file printraw fd_write functions.end.increase debug_function_set fd_startswith str_len functions.end.decrease msleep remove_top_names string_unescape + memoizer.get / print load_call_stack func_return_two None hash debugger_waitlen_set bp call_stack.top2 && file.open cache_slot fd_flush repeat_if names.set _cheat_dict.get Pointer load shuffle str_endswith input.next_triple_quote local_call_stack continue_from_file c.infinity newfunc0 fd_position_set newfunc1 func_return print_frame _cheat_dict.set int 2 call fd_position drop1 memory_hint.set string_equal > input.next_token int_to_str printrepr stdin.next_line str_next_token newfunc save_state save memoizer.set functions.end fd_ended fd_next_token error memory.len memory.get assign2 char_between prm memoizer.reset string_escape if - pick1 printeol 1 switch_input_file rewind stdin.next_token type_of repeat next_token2 error_handler_set fd_next_char memory_hint.get is_basic is_str memory.append file.open_at s21 all_data_stack_pick print_mem set_output [ names.get functions.append functions.add write_loop run input_loop2
#indices 1150 202 187
#names 129
0 fd_next_line || file.close load_state if-else call_stack.len str_join _cheat_dict.new is_alpha newfunc2 newfunc3 printspace < s4127 return memory.set == return_if sub_str call_from_input not return_no_value mod mempos_append print_state current_input_file printraw fd_write functions.end.increase debug_function_set fd_startswith str_len functions.end.decrease functions_end msleep remove_top_names string_unescape + memoizer.get / print load_call_stack func_return_two None hash push: debugger_waitlen_set lookup_error pushf: bp call_stack.top2 && file.open cache_slot fd_flush repeat_if names.set _cheat_dict.get check: Pointer load shuffle str_endswith input.next_triple_quote local_call_stack continue_from_file ''' c.infinity newfunc0 fd_position_set newfunc1 func_return print_frame pushi: _cheat_dict.set int 2 call fd_position drop1 memory_hint.set string_equal > input.next_token int_to_str printrepr stdin.next_line str_next_token newfunc save_state save memoizer.set functions.end fd_ended fd_next_token error memory.len memory.get assign2 char_between prm assign: memoizer.reset string_escape if pick: - pick1 printeol 1 switch_input_file rewind stdin.next_token type_of repeat next_token2 error_handler_set fd_next_char memory_hint.get is_basic ] is_str memory.append file.open_at s21 all_data_stack_pick print_mem set_output
