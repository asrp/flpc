#memory 11173 1173 794 79 -1 -1 91 415 1 255 187 79 71 299 5 279 511 327 263 187 79 415 355 42 415 415 42 42 415 131 42 415 415 42 42 415 155 42 415 18 42 415 79 42 303 303 79 51 343 487 79 51 487 79 51 487 79 51 487 79 51 810 195 79 51 487 79 51 487 79 51 487 79 51 487 79 15 487 79 515 9 243 79 51 299 13 339 13 810 195 339 13 415 17 131 415 182 391 339 13 415 21 131 415 198 391 339 13 415 25 131 415 210 391 339 13 415 29 131 415 222 391 339 13 415 33 131 415 234 391 339 13 415 37 131 415 250 391 339 13 415 41 131 415 262 391 339 13 415 45 131 415 274 391 339 13 415 49 131 415 286 391 339 13 415 53 131 415 298 391 515 13 415 57 131 415 310 391 79 91 431 371 299 9 415 326 403 187 79 299 61 515 61 810 107 79 51 810 175 79 415 778 403 79 71 299 65 355 415 69 131 415 3 155 355 415 73 131 415 7 155 355 415 77 131 415 11 155 355 415 81 131 415 15 155 355 415 85 131 415 19 155 355 415 89 131 415 23 155 355 415 93 131 415 27 155 355 415 97 131 415 31 155 355 415 101 131 415 35 155 355 415 53 131 415 39 155 355 415 105 131 415 43 155 355 415 109 131 415 47 155 355 415 113 131 415 51 155 355 415 117 131 415 55 155 355 415 121 131 415 59 155 355 415 125 131 415 63 155 355 415 129 131 415 67 155 355 415 133 131 415 71 155 355 415 137 131 415 75 155 355 415 57 131 415 79 155 355 415 29 131 415 83 155 355 415 141 131 415 87 155 355 415 145 131 415 91 155 355 415 149 131 415 95 155 355 415 153 131 415 99 155 355 415 157 131 415 103 155 355 415 161 131 415 107 155 355 415 165 131 415 111 155 355 415 169 131 415 115 155 355 415 173 131 415 119 155 355 415 177 131 415 123 155 355 415 181 131 415 127 155 355 415 185 131 415 131 155 355 415 189 131 415 135 155 355 415 193 131 415 139 155 355 415 197 131 415 235 155 355 415 201 131 415 147 155 355 415 205 131 415 151 155 355 415 209 131 415 155 155 355 415 213 131 415 159 155 355 415 217 131 415 163 155 355 415 221 131 415 167 155 355 415 225 131 415 171 155 355 415 229 131 415 175 155 355 415 233 131 415 179 155 355 415 237 131 415 183 155 355 415 241 131 415 187 155 355 415 245 131 415 191 155 355 415 249 131 415 195 155 355 415 253 131 415 199 155 355 415 257 131 415 203 155 355 415 261 131 415 207 155 355 415 265 131 415 211 155 355 415 269 131 415 215 155 355 415 273 131 415 219 155 355 415 277 131 415 223 155 355 415 281 131 415 227 155 355 415 285 131 415 231 155 355 415 289 131 415 235 155 355 415 293 131 415 239 155 355 415 297 131 415 243 155 355 415 301 131 415 247 155 355 415 305 131 415 251 155 355 415 309 131 415 255 155 355 415 313 131 415 259 155 355 415 317 131 415 263 155 355 415 321 131 415 267 155 355 415 325 131 415 271 155 355 415 329 131 415 275 155 355 415 333 131 415 279 155 355 415 337 131 415 283 155 355 415 341 131 415 287 155 355 415 345 131 415 291 155 355 415 349 131 415 295 155 355 415 41 131 415 299 155 355 415 353 131 415 303 155 355 415 357 131 415 307 155 355 415 361 131 415 315 155 355 415 365 131 415 319 155 355 415 369 131 415 323 155 355 415 373 131 415 327 155 355 415 377 131 415 331 155 355 415 381 131 415 335 155 355 415 45 131 415 339 155 355 415 385 131 415 343 155 355 415 389 131 415 347 155 355 415 393 131 415 351 155 355 415 397 131 415 355 155 355 415 401 131 415 359 155 355 415 405 131 415 363 155 355 415 409 131 415 367 155 355 415 413 131 415 371 155 355 415 417 131 415 375 155 355 415 421 131 415 379 155 355 415 425 131 415 383 155 355 415 429 131 415 387 155 355 415 433 131 415 391 155 355 415 437 131 415 395 155 355 415 441 131 415 399 155 355 415 445 131 415 403 155 355 415 449 131 415 407 155 355 415 453 131 415 411 155 355 415 17 131 415 415 155 355 415 457 131 415 419 155 355 415 1 131 415 18 155 355 415 461 131 415 427 155 355 415 465 131 415 431 155 355 415 33 131 415 435 155 355 415 469 131 415 439 155 355 415 473 131 415 443 155 355 415 477 131 415 447 155 355 415 481 131 415 451 155 355 415 485 131 415 455 155 355 415 489 131 415 459 155 355 415 493 131 415 463 155 355 415 497 131 415 467 155 355 415 501 131 415 471 155 355 415 505 131 415 475 155 355 415 509 131 415 479 155 355 415 513 131 415 483 155 355 415 517 131 415 487 155 355 415 521 131 415 491 155 355 415 525 131 415 495 155 355 415 529 131 415 499 155 355 415 533 131 415 503 155 355 415 537 131 415 507 155 355 415 541 131 415 511 155 355 415 37 131 415 515 155 355 415 545 131 415 519 155 355 415 549 131 415 523 155 355 415 553 131 415 527 155 355 415 557 131 415 710 155 355 415 561 131 415 810 155 355 415 565 131 415 42 155 355 415 569 131 415 78 155 355 415 573 131 415 710 155 355 415 577 131 415 750 155 355 415 581 131 415 794 155 18 79
#positions
#strings 146 lookup_error value pointer token push: attr: attr_call: pushi: pushf: check: assign: pick: bind: ''' ] name key load shuffle str_endswith input.next_triple_quote fd_next_line memoizer.get || continue_from_file file.close load_state file.open input.next_token if-else call_stack.len _cheat_dict.new fd_position_set newfunc1 str_join _cheat_dict.set newfunc0 0 newfunc2 2 call fd_position drop1 memory_hint.set newfunc < string_equal > s4127 return type_of == return_if error_handler_set sub_str return4 int_to_str call_from_input stdin.next_line not return_no_value str_next_token mempos_append mod save_state printspace print_state memoizer.set return_two1 return_two2 names.set debugger_waitlen_set return1 current_input_file return3 return2 printraw error fd_write functions.end.increase debug_function_set fd_startswith memory.get functions.end assign2 char_between prm str_len functions.end.decrease memoizer.reset msleep string_escape fd_ended memory.set return_no_value2 remove_top_names string_unescape + - pick1 / printeol 1 Pointer switch_input_file rewind print stdin.next_token if fd_next_token None repeat hash next_token2 fd_next_char save memory.len bp call_stack.top2 && is_basic memory_hint.get c.infinity cache_slot print_frame fd_flush repeat_if is_str printrepr memory.append file.open_at is_alpha _cheat_dict.get newfunc3 int s21 all_data_stack_pick print_mem set_output [ names.get functions.append functions.add write_loop run input_loop2
#indices 1171 202 187
#names 132 load shuffle str_endswith input.next_triple_quote fd_next_line memoizer.get || continue_from_file file.close ''' load_state file.open input.next_token if-else call_stack.len _cheat_dict.new fd_position_set newfunc1 str_join ] pushi: _cheat_dict.set newfunc0 0 newfunc2 2 call fd_position drop1 memory_hint.set newfunc < string_equal > s4127 return type_of == return_if error_handler_set sub_str return4 int_to_str call_from_input stdin.next_line not return_no_value str_next_token mempos_append mod save_state printspace print_state memoizer.set return_two1 return_two2 names.set debugger_waitlen_set return1 current_input_file return3 return2 printraw error fd_write functions.end.increase debug_function_set fd_startswith memory.get functions.end assign2 char_between prm str_len assign: functions.end.decrease memoizer.reset functions_end msleep string_escape fd_ended memory.set return_no_value2 remove_top_names pick: string_unescape + - pick1 / printeol 1 Pointer switch_input_file rewind print stdin.next_token if fd_next_token None repeat hash next_token2 push: fd_next_char lookup_error save memory.len pushf: bp call_stack.top2 && is_basic memory_hint.get c.infinity cache_slot print_frame fd_flush repeat_if is_str printrepr memory.append file.open_at is_alpha _cheat_dict.get newfunc3 int s21 check: all_data_stack_pick print_mem set_output
