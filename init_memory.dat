#memory 10887 887 706 363 -1 -1 195 139 1 287 75 363 203 307 5 179 5 263 59 91 75 363 139 327 42 139 139 42 42 139 231 42 139 139 42 42 139 67 42 139 18 42 139 363 42 107 107 363 239 371 363 239 371 363 239 371 363 239 371 363 239 730 79 363 239 371 363 239 371 363 239 371 363 179 9 275 363 239 307 13 319 13 730 79 319 13 139 17 231 139 186 315 319 13 139 21 231 139 198 315 319 13 139 25 231 139 210 315 319 13 139 29 231 139 222 315 319 13 139 33 231 139 234 315 319 13 139 37 231 139 250 315 319 13 139 41 231 139 262 315 319 13 139 45 231 139 274 315 179 13 139 49 231 139 286 315 363 195 291 183 307 9 139 302 347 75 363 307 53 179 53 730 219 363 239 730 219 363 195 139 690 347 75 363 203 307 57 327 139 61 231 139 3 67 327 139 33 231 139 7 67 327 139 65 231 139 11 67 327 139 69 231 139 15 67 327 139 73 231 139 19 67 327 139 77 231 139 23 67 327 139 81 231 139 27 67 327 139 85 231 139 31 67 327 139 89 231 139 35 67 327 139 93 231 139 39 67 327 139 97 231 139 43 67 327 139 101 231 139 47 67 327 139 105 231 139 51 67 327 139 109 231 139 271 67 327 139 113 231 139 59 67 327 139 117 231 139 63 67 327 139 121 231 139 67 67 327 139 125 231 139 71 67 327 139 129 231 139 75 67 327 139 133 231 139 79 67 327 139 137 231 139 83 67 327 139 141 231 139 87 67 327 139 145 231 139 91 67 327 139 149 231 139 95 67 327 139 153 231 139 99 67 327 139 157 231 139 103 67 327 139 161 231 139 107 67 327 139 165 231 139 115 67 327 139 169 231 139 119 67 327 139 173 231 139 123 67 327 139 177 231 139 127 67 327 139 181 231 139 131 67 327 139 185 231 139 135 67 327 139 17 231 139 139 67 327 139 189 231 139 143 67 327 139 1 231 139 18 67 327 139 193 231 139 151 67 327 139 197 231 139 155 67 327 139 201 231 139 159 67 327 139 205 231 139 163 67 327 139 209 231 139 167 67 327 139 213 231 139 171 67 327 139 217 231 139 175 67 327 139 37 231 139 179 67 327 139 221 231 139 183 67 327 139 225 231 139 187 67 327 139 229 231 139 191 67 327 139 233 231 139 195 67 327 139 237 231 139 199 67 327 139 241 231 139 203 67 327 139 29 231 139 207 67 327 139 245 231 139 211 67 327 139 249 231 139 215 67 327 139 253 231 139 219 67 327 139 257 231 139 223 67 327 139 261 231 139 227 67 327 139 265 231 139 231 67 327 139 269 231 139 235 67 327 139 273 231 139 239 67 327 139 277 231 139 243 67 327 139 281 231 139 247 67 327 139 285 231 139 251 67 327 139 289 231 139 255 67 327 139 293 231 139 259 67 327 139 297 231 139 263 67 327 139 301 231 139 267 67 327 139 305 231 139 271 67 327 139 309 231 139 275 67 327 139 313 231 139 279 67 327 139 317 231 139 283 67 327 139 321 231 139 287 67 327 139 325 231 139 291 67 327 139 329 231 139 295 67 327 139 333 231 139 299 67 327 139 337 231 139 303 67 327 139 41 231 139 307 67 327 139 341 231 139 311 67 327 139 345 231 139 315 67 327 139 45 231 139 319 67 327 139 349 231 139 323 67 327 139 353 231 139 327 67 327 139 357 231 139 331 67 327 139 361 231 139 335 67 327 139 365 231 139 339 67 327 139 369 231 139 343 67 327 139 373 231 139 347 67 327 139 377 231 139 351 67 327 139 381 231 139 355 67 327 139 385 231 139 359 67 327 139 49 231 139 363 67 327 139 389 231 139 367 67 327 139 393 231 139 371 67 327 139 397 231 139 375 67 327 139 401 231 139 622 67 327 139 405 231 139 730 67 327 139 409 231 139 42 67 327 139 413 231 139 82 67 327 139 417 231 139 622 67 327 139 421 231 139 662 67 327 139 425 231 139 706 67 18 363
#positions 10887 -1 -1 -1 -1 -1 -1 -1 -1 20 32 51 65 -1 -1 45 66 -1 -1 42 66 68 84 91 98 -1 -1 113 119 -1 -1 120 135 102 136 139 163 -1 -1 99 163 323 329 329 335 335 352 352 363 363 369 369 386 386 403 403 414 414 427 427 444 444 455 455 461 461 478 478 495 495 506 506 516 516 533 533 544 544 557 557 574 574 585 585 587 587 604 604 632 632 655 318 658 870 888 856 889 849 889 946 964 932 965 925 965 1027 1045 1013 1046 1006 1046 1104 1122 1090 1123 1083 1123 1191 1209 1181 1210 1167 1211 1160 1211 1269 1287 1255 1288 1248 1288 1347 1365 1333 1366 1326 1366 1423 1441 1409 1442 1402 1442 1489 1497 -1 -1 1482 1498 1475 1498 759 777 751 756 -1 -1 806 811 -1 -1 796 812 782 813 834 839 -1 -1 840 847 -1 -1 820 848 849 889 849 889 818 889 910 915 -1 -1 916 923 -1 -1 896 924 925 965 925 965 894 965 986 991 -1 -1 992 1004 -1 -1 972 1005 1006 1046 1006 1046 970 1046 1067 1072 -1 -1 1073 1081 -1 -1 1053 1082 1083 1123 1083 1123 1051 1123 1144 1149 -1 -1 1150 1158 -1 -1 1130 1159 1160 1211 1160 1211 1128 1211 1232 1237 -1 -1 1238 1246 -1 -1 1218 1247 1248 1288 1248 1288 1216 1288 1309 1314 -1 -1 1315 1324 -1 -1 1295 1325 1326 1366 1326 1366 1293 1366 1387 1392 -1 -1 1393 1400 -1 -1 1373 1401 1402 1442 1402 1442 1371 1442 1463 1469 -1 -1 1470 1473 -1 -1 1449 1474 1475 1498 1475 1498 1447 1498 746 1498 682 692 723 735 715 736 705 712 -1 -1 746 1498 746 1498 739 1498 -1 -1 702 1498 1561 1567 -1 -1 1586 1591 -1 -1 1576 1592 1571 1593 1568 1593 1696 1714 1686 1715 1681 1716 1626 1716 1595 1606 1626 1716 1626 1716 1619 1716 -1 -1 1616 1716 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
#strings 107 lookup_error value pointer token push: attr: attr_call: pushi: pushf: check: assign: pick: ] name key 0 load_state if-else call_stack.len str_join _cheat_dict.new is_alpha newfunc2 save_state printspace < s4127 return memory.set == return_if not return_no_value mempos_append print_state printraw functions.end.increase debug_function_set fd_startswith str_len functions.end.decrease return_no_value2 + memoizer.get print return4 None debugger_waitlen_set bp file.open cache_slot repeat_if names.set _cheat_dict.get newfunc3 Pointer load c.infinity newfunc0 fd_position_set newfunc1 _cheat_dict.set 2 call fd_position drop1 string_equal > input.next_token printrepr save memoizer.set return_two1 return_two2 functions.end fd_ended return1 return3 return2 fd_next_token error memory.len memory.get char_between prm memoizer.reset if - pick1 printeol 1 stdin.next_token call_stack.top2 repeat next_token2 fd_next_char is_basic is_str memory.append s21 [ names.get functions.append functions.add write_loop run input_loop2
#functions_end 885
#names 94 0 pushf: load_state if-else call_stack.len str_join _cheat_dict.new is_alpha newfunc2 save_state printspace < s4127 return memory.set == return_if not return_no_value mempos_append print_state printraw functions.end.increase debug_function_set fd_startswith str_len functions.end.decrease functions_end return_no_value2 + memoizer.get print return4 None push: debugger_waitlen_set lookup_error bp file.open cache_slot repeat_if names.set _cheat_dict.get newfunc3 check: Pointer load c.infinity newfunc0 fd_position_set newfunc1 pushi: _cheat_dict.set 2 call fd_position drop1 string_equal > input.next_token printrepr save memoizer.set return_two1 return_two2 functions.end fd_ended return1 return3 return2 fd_next_token error memory.len memory.get char_between prm assign: memoizer.reset if pick: - pick1 printeol 1 stdin.next_token call_stack.top2 repeat next_token2 fd_next_char is_basic ] is_str memory.append s21
