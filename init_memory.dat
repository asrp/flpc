#memory 10557 557
794 163 -1 -1 79 51 1 123 23 163 83 131 5 119 171 11 31 23 163 51 147 42 51 51 42 42 51 103 42 51 51 42 42 51 15 42 51 18 42 51 163 42 35 35 163 111 43 167 163 111 167 163 111 167 163 111 167 163 111 810 27 163 111 167 163 111 167 163 111 167 163 111 167 163 75 167 163 67 9 87 163 111 131 13 139 13 810 27 139 13 51 17 103 51 182 135 139 13 51 21 103 51 198 135 139 13 51 25 103 51 210 135 139 13 51 29 103 51 222 135 139 13 51 33 103 51 234 135 139 13 51 37 103 51 250 135 139 13 51 41 103 51 262 135 139 13 51 45 103 51 274 135 139 13 51 49 103 51 286 135 139 13 51 53 103 51 298 135 67 13 51 57 103 51 310 135 163 79 127 71 131 9 51 326 159 23 163 131 61 67 61 810 95 163 111 810 19 163 51 778 159 163 83 131 65 147 51 69 103 51 3 15 147 51 73 103 51 7 15 147 51 77 103 51 11 15 147 51 81 103 51 15 15 147 51 85 103 51 19 15 147 51 89 103 51 23 15 147 51 93 103 51 27 15 147 51 97 103 51 31 15 147 51 101 103 51 35 15 147 51 105 103 51 43 15 147 51 109 103 51 47 15 147 51 17 103 51 51 15 147 51 33 103 51 55 15 147 51 113 103 51 59 15 147 51 117 103 51 63 15 147 51 37 103 51 67 15 147 51 121 103 51 71 15 147 51 125 103 51 75 15 147 51 129 103 51 79 15 147 51 133 103 51 83 15 147 51 137 103 51 87 15 147 51 29 103 51 91 15 147 51 141 103 51 95 15 147 51 145 103 51 99 15 147 51 149 103 51 103 15 147 51 153 103 51 107 15 147 51 157 103 51 111 15 147 51 161 103 51 115 15 147 51 165 103 51 119 15 147 51 169 103 51 123 15 147 51 173 103 51 127 15 147 51 41 103 51 131 15 147 51 177 103 51 135 15 147 51 45 103 51 139 15 147 51 181 103 51 143 15 147 51 185 103 51 147 15 147 51 189 103 51 151 15 147 51 193 103 51 155 15 147 51 197 103 51 159 15 147 51 57 103 51 163 15 147 51 201 103 51 167 15 147 51 205 103 51 171 15 147 51 209 103 51 710 15 147 51 213 103 51 810 15 147 51 1 103 51 18 15 147 51 217 103 51 42 15 147 51 221 103 51 78 15 147 51 225 103 51 710 15 147 51 229 103 51 750 15 147 51 233 103 51 794 15 18 163
#positions 557
-1 -1 -1 -1 -1 -1 -1 -1 20 32 51 65 -1 -1 45 66 -1 -1 42 66 68 84 91 98 -1 -1 113 128 129 134 102 135 150 174 -1 -1 99 174 334 340 340 346 346 363 364 374 374 380 380 397 397 414 415 425 425 438 438 455 456 466 466 472 472 489 489 506 507 517 517 527 527 544 545 555 555 568 568 585 586 596 596 598 598 615 616 643 643 666 329 669 897 915 881 916 867 917 860 917 974 992 960 993 953 993 1055 1073 1041 1074 1034 1074 1132 1150 1118 1151 1111 1151 1219 1237 1209 1238 1195 1239 1188 1239 1297 1315 1283 1316 1276 1316 1375 1393 1361 1394 1354 1394 1451 1469 1437 1470 1430 1470 1527 1545 1513 1546 1506 1546 1601 1626 1587 1627 1580 1627 1674 1682 -1 -1 1667 1683 1660 1683 770 788 762 767 -1 -1 817 822 -1 -1 807 823 793 824 845 850 -1 -1 851 858 -1 -1 831 859 860 917 860 917 829 917 938 943 -1 -1 944 951 -1 -1 924 952 953 993 953 993 922 993 1014 1019 -1 -1 1020 1032 -1 -1 1000 1033 1034 1074 1034 1074 998 1074 1095 1100 -1 -1 1101 1109 -1 -1 1081 1110 1111 1151 1111 1151 1079 1151 1172 1177 -1 -1 1178 1186 -1 -1 1158 1187 1188 1239 1188 1239 1156 1239 1260 1265 -1 -1 1266 1274 -1 -1 1246 1275 1276 1316 1276 1316 1244 1316 1337 1342 -1 -1 1343 1352 -1 -1 1323 1353 1354 1394 1354 1394 1321 1394 1415 1420 -1 -1 1421 1428 -1 -1 1401 1429 1430 1470 1430 1470 1399 1470 1491 1496 -1 -1 1497 1504 -1 -1 1477 1505 1506 1546 1506 1546 1475 1546 1567 1572 -1 -1 1573 1578 -1 -1 1553 1579 1580 1627 1580 1627 1551 1627 1648 1654 -1 -1 1655 1658 -1 -1 1634 1659 1660 1683 1660 1683 1632 1683 757 1683 693 703 734 746 726 747 716 723 -1 -1 757 1683 757 1683 750 1683 -1 -1 713 1683 1746 1752 -1 -1 1771 1776 -1 -1 1761 1777 1756 1778 1753 1778 1895 1913 1885 1914 1869 1915 1814 1915 1814 1915 1814 1915 1807 1915 1804 1915 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1
#strings 59
lookup_error value pointer token push: attr: attr_call: pushi: pushf: check: assign: pick: bind: ''' ] name key 0 primitive_name memory.set return_if call_from_input return_no_value mempos_append functions.end.increase functions.end.decrease string_unescape print bp repeat_if Pointer input.next_triple_quote newfunc0 newfunc1 func_return call drop1 string_equal > input.next_token Prim functions.end error memory.len if - pick1 1 primitives.len repeat memory.append s21 [ names.get functions.append functions.add write_loop run input_loop2
#indices 555 202 187
#names 43
0 primitive_name memory.set return_if call_from_input return_no_value mempos_append functions.end.increase functions.end.decrease functions_end string_unescape print push: pushf: bp repeat_if check: Pointer input.next_triple_quote newfunc0 newfunc1 func_return pushi: call drop1 string_equal > input.next_token Prim functions.end error memory.len assign: if pick: - pick1 1 primitives.len repeat ] memory.append s21
